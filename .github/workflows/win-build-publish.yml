# This is a basic workflow to help you get started with Actions

name: Windows builds

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  windows_build:
    runs-on: windows-latest
    #if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64
          toolset: 14.2

      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          architecture: 'x64'

      - name: Build and Test
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools wheel virtualenv
          python -m virtualenv venv
          venv\\Scripts\\activate
          python setup.py build_ext --inplace
          python -m unittest

      - name: Build Wheels
        shell: pwsh
        run: |
          venv\\Scripts\\activate
          pip wheel -v -w wheelhouse --no-deps .
          dir wheelhouse/*

      - name: Publish to Pypi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m twine upload wheelhouse/*.whl